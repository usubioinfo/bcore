{% extends "templates/manual.template.njk" %}

{% block content %}
  <h2 class="kbl-header mb-5">Searching in Linux</h2>

  <h4 class="kbl-header light">Finding Files</h4>
  <p>
    
  </p>

  <h4 class="kbl-header light">Folders and Moving Around</h4>
  <p>
    At the core of all modern computers is a file system, and high-performance computing is no exception. Every user also has their own home directory (that's a fancy way of saying 'folder').
    This home directory is where you, as a user of our HPC, will be able to keep all of your files. There are a few commands that you'll be using fairly often when using 
    Linux through a terminal:
  </p>

  <ul>
    <li>- <code>cd 'directory name'</code> - This command takes you to a specific directory</li>
    <li>- <code>cd ..</code> - This command takes you up one level in the folder heirarchy</li>
    <li>- <code>cd ~</code> - This command takes you to your home directory. ~ is just shorthand for your home directory.</li>
    <li>- <code>ls</code> - Lists the contents of the directory you are currently in. Passing the <code>-a</code> flag will let you see all hidden folders/files.</li>
    <li>- <code>mkdir 'directory name'</code> - Creates an empty directory with the name you pass in.</li>
  </ul>

  <h4 class="kbl-header light">Manipulating Data</h4>
  <p>
    Now that we know how to create folders and move around them, the next logical step is knowing commands that allow us to populate those folders with data. 
  </p>

  <ul>
    <li>- <code>cat 'file name'</code> - Shows all the contents of a file</li>
    <li>- <code>touch 'file name'</code> - Creates an empty file with the name you pass in.</li>
    <li>- <code>mv 'file name' 'new file name'</code> - Moves file to new file name. This is basically just a file rename, but this can be used to move files to different folders too.</li>
    <li>- <code>rm 'file name'</code> - Removes the file. Use the <code>-r</code> flag to remove directories.</li>
    <li>- <code>cp 'file name' 'new location'</code> - Copies the file to a new location. Will not destroy the old file.</li>
  </ul>

  <h4 class="kbl-header light">Finding Data</h4>

  <p>
    Usually <code>ls</code> and <code>cat</code> are sufficient for finding data through the terminal, but there are a few tools that allow us to find
    data even more efficiently. The commands will be listed below, but there will also be a dedicated tutorial on their use as well.
  </p>

  <ul>
    <li>- <code>find 'file name'</code> - Searches through the system for that specific file. It's slow, but if your file exists, it will be found.</li>
    <li>- <code>locate 'file name'</code> - Uses an already indexed version of the file system to find a file. If your file hasn't been indexed yet, it won't be found, but <code>locate</code> is very fast.</li>
    <li>- <code>grep</code> - Finds a certain charcter sequence in a given output. Again, these commands will have a dedicated tutorial as they can be a bit complex.</li>
  </ul>
  
{% endblock %}